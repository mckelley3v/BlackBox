{
    'includes':
    [
        "../../../configurations.gypi",
    ],
    'targets':
    [
        {
            'target_name': "m1_numeric",
            'type': "static_library",
            'include_dirs':
            [
                "include",
                "source",
            ],
            'sources':
            [
                "include/m1/numeric.hpp",
                "include/m1/numeric/abs.hpp",
                "include/m1/numeric/acos.hpp",
                "include/m1/numeric/asin.hpp",
                "include/m1/numeric/atan.hpp",
                "include/m1/numeric/ceil.hpp",
                "include/m1/numeric/clamp.hpp",
                "include/m1/numeric/cosh.hpp",
                "include/m1/numeric/cos.hpp",
                "include/m1/numeric/degrees.hpp",
                "include/m1/numeric/exp10.hpp",
                "include/m1/numeric/exp2.hpp",
                "include/m1/numeric/exp.hpp",
                "include/m1/numeric/floor.hpp",
                "include/m1/numeric/fract.hpp",
                "include/m1/numeric/frexp.hpp",
                "include/m1/numeric/inverse_lerp.hpp",
                "include/m1/numeric/inverse_sqrt.hpp",
                "include/m1/numeric/is_close.hpp",
                "include/m1/numeric/is_finite.hpp",
                "include/m1/numeric/is_inf.hpp",
                "include/m1/numeric/is_nan.hpp",
                "include/m1/numeric/is_pow2.hpp",
                "include/m1/numeric/is_small.hpp",
                "include/m1/numeric/ldexp.hpp",
                "include/m1/numeric/lerp.hpp",
                "include/m1/numeric/linear_step.hpp",
                "include/m1/numeric/log10.hpp",
                "include/m1/numeric/log2.hpp",
                "include/m1/numeric/log.hpp",
                "include/m1/numeric/max.hpp",
                "include/m1/numeric/min.hpp",
                "include/m1/numeric/mix.hpp",
                "include/m1/numeric/mirror.hpp",
                "include/m1/numeric/modf.hpp",
                "include/m1/numeric/mod.hpp",
                "include/m1/numeric/pow.hpp",
                "include/m1/numeric/radians.hpp",
                "include/m1/numeric/repeat.hpp",
                "include/m1/numeric/round_even.hpp",
                "include/m1/numeric/round.hpp",
                "include/m1/numeric/saturate.hpp",
                "include/m1/numeric/sign.hpp",
                "include/m1/numeric/sinh.hpp",
                "include/m1/numeric/sin.hpp",
                "include/m1/numeric/smooth_step.hpp",
                "include/m1/numeric/sqrt.hpp",
                "include/m1/numeric/step.hpp",
                "include/m1/numeric/tanh.hpp",
                "include/m1/numeric/tan.hpp",
                "include/m1/numeric/trunc.hpp",
                "source/m1/numeric/default_tolerance.hpp",
                "source/m1/numeric/abs.cpp",
                "source/m1/numeric/acos.cpp",
                "source/m1/numeric/asin.cpp",
                "source/m1/numeric/atan.cpp",
                "source/m1/numeric/ceil.cpp",
                "source/m1/numeric/clamp.cpp",
                "source/m1/numeric/cos.cpp",
                "source/m1/numeric/cosh.cpp",
                "source/m1/numeric/degrees.cpp",
                "source/m1/numeric/exp10.cpp",
                "source/m1/numeric/exp2.cpp",
                "source/m1/numeric/exp.cpp",
                "source/m1/numeric/floor.cpp",
                "source/m1/numeric/fract.cpp",
                "source/m1/numeric/frexp.cpp",
                "source/m1/numeric/inverse_lerp.cpp",
                "source/m1/numeric/inverse_sqrt.cpp",
                "source/m1/numeric/is_close.cpp",
                "source/m1/numeric/is_finite.cpp",
                "source/m1/numeric/is_inf.cpp",
                "source/m1/numeric/is_nan.cpp",
                "source/m1/numeric/is_pow2.cpp",
                "source/m1/numeric/is_small.cpp",
                "source/m1/numeric/ldexp.cpp",
                "source/m1/numeric/lerp.cpp",
                "source/m1/numeric/linear_step.cpp",
                "source/m1/numeric/log10.cpp",
                "source/m1/numeric/log2.cpp",
                "source/m1/numeric/log.cpp",
                "source/m1/numeric/max.cpp",
                "source/m1/numeric/min.cpp",
                "source/m1/numeric/mix.cpp",
                "source/m1/numeric/mirror.cpp",
                "source/m1/numeric/mod.cpp",
                "source/m1/numeric/modf.cpp",
                "source/m1/numeric/pow.cpp",
                "source/m1/numeric/radians.cpp",
                "source/m1/numeric/repeat.cpp",
                "source/m1/numeric/round.cpp",
                "source/m1/numeric/round_even.cpp",
                "source/m1/numeric/saturate.cpp",
                "source/m1/numeric/sign.cpp",
                "source/m1/numeric/sin.cpp",
                "source/m1/numeric/sinh.cpp",
                "source/m1/numeric/smooth_step.cpp",
                "source/m1/numeric/sqrt.cpp",
                "source/m1/numeric/step.cpp",
                "source/m1/numeric/tan.cpp",
                "source/m1/numeric/tanh.cpp",
                "source/m1/numeric/trunc.cpp",
                "m1_numeric.gyp",
            ],
            'direct_dependent_settings':
            {
                'include_dirs':
                [
                    "include",
                ],
            },
        },
        {
            'target_name': "m1_numeric_test",
            'type': "executable",
            'sources':
            [
                "test/test_main.cpp",
                "test/m1/numeric/test_clamp.cpp",
                "test/m1/numeric/test_degrees.cpp",
                "test/m1/numeric/test_fract.cpp",
                "test/m1/numeric/test_inverse_sqrt.cpp",
                "test/m1/numeric/test_is_pow2.cpp",
                "test/m1/numeric/test_lerp.cpp",
                "test/m1/numeric/test_log2.cpp",
                "test/m1/numeric/test_mirror.cpp",
                "test/m1/numeric/test_mod.cpp",
                "test/m1/numeric/test_radians.cpp",
                "test/m1/numeric/test_repeat.cpp",
                "test/m1/numeric/test_round.cpp",
                "test/m1/numeric/test_round_even.cpp",
                "test/m1/numeric/test_smooth_step.cpp",
                "test/m1/numeric/test_step.cpp",
                "test/m1/numeric/test_trunc.cpp",
            ],
            'dependencies':
            [
                "m1_numeric",
            ],
        },
    ],
}
