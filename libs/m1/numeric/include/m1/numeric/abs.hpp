#ifndef M1_NUMERIC_ABS_HPP
#define M1_NUMERIC_ABS_HPP

namespace m1
{
    // =================================================================================================================

    constexpr int abs(int x) noexcept;
    constexpr float abs(float x) noexcept;
    constexpr double abs(double x) noexcept;

    // =================================================================================================================
} // namespace m1

// =====================================================================================================================

constexpr int m1::abs(int x) noexcept
{
    return x < 0 ? -x : x;
}

// ---------------------------------------------------------------------------------------------------------------------

constexpr float m1::abs(float x) noexcept
{
    return x < 0.0f ? -x : x;
}

// ---------------------------------------------------------------------------------------------------------------------

constexpr double m1::abs(double x) noexcept
{
    return x < 0.0 ? -x : x;
}

// =====================================================================================================================

#endif // M1_NUMERIC_ABS_HPP
