#ifndef M1_NUMERIC_HPP
#define M1_NUMERIC_HPP

#include "m1/numeric.hpp"
#include "m1/numeric/abs.hpp"
#include "m1/numeric/acos.hpp"
#include "m1/numeric/all_of.hpp"
#include "m1/numeric/any_of.hpp"
#include "m1/numeric/asin.hpp"
#include "m1/numeric/atan.hpp"
#include "m1/numeric/ceil.hpp"
#include "m1/numeric/clamp.hpp"
#include "m1/numeric/cosh.hpp"
#include "m1/numeric/cos.hpp"
#include "m1/numeric/degrees.hpp"
#include "m1/numeric/exp10.hpp"
#include "m1/numeric/exp2.hpp"
#include "m1/numeric/exp.hpp"
#include "m1/numeric/floor.hpp"
#include "m1/numeric/fract.hpp"
#include "m1/numeric/frexp.hpp"
#include "m1/numeric/inverse_lerp.hpp"
#include "m1/numeric/inverse_sqrt.hpp"
#include "m1/numeric/is_close.hpp"
#include "m1/numeric/is_finite.hpp"
#include "m1/numeric/is_inf.hpp"
#include "m1/numeric/is_nan.hpp"
#include "m1/numeric/is_pow2.hpp"
#include "m1/numeric/is_small.hpp"
#include "m1/numeric/ldexp.hpp"
#include "m1/numeric/lerp.hpp"
#include "m1/numeric/linear_step.hpp"
#include "m1/numeric/log10.hpp"
#include "m1/numeric/log2.hpp"
#include "m1/numeric/log.hpp"
#include "m1/numeric/max.hpp"
#include "m1/numeric/min.hpp"
#include "m1/numeric/mix.hpp"
#include "m1/numeric/mirror.hpp"
#include "m1/numeric/mod.hpp"
#include "m1/numeric/modf.hpp"
#include "m1/numeric/none_of.hpp"
#include "m1/numeric/pow.hpp"
#include "m1/numeric/radians.hpp"
#include "m1/numeric/repeat.hpp"
#include "m1/numeric/round_even.hpp"
#include "m1/numeric/round.hpp"
#include "m1/numeric/saturate.hpp"
#include "m1/numeric/sign.hpp"
#include "m1/numeric/sinh.hpp"
#include "m1/numeric/sin.hpp"
#include "m1/numeric/smooth_step.hpp"
#include "m1/numeric/sqrt.hpp"
#include "m1/numeric/step.hpp"
#include "m1/numeric/sum.hpp"
#include "m1/numeric/tanh.hpp"
#include "m1/numeric/tan.hpp"
#include "m1/numeric/trunc.hpp"

#endif // M1_NUMERIC_HPP
